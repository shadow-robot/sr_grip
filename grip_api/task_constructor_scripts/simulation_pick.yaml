name: simulation_pick
source: framework_state_machine
node_name: simulation_pick_state_machine
outcomes: [successful_pipeline, quit_pipeline]
states:
  - GenerateGrasps:
      source: wait_for_signal
      topic_name: successful_suzuki
      transitions: {success: SelectGrasp, fail: quit_pipeline}
  - SelectGrasp:
      source: select
      outcomes: [success, fail]
      message_type: grasp
      message_names: ["suzuki_grasp"]
      output_keys: [selected_grasp]
      transitions: {success: ConcurrentPlan, fail: quit_pipeline}
  - ConcurrentPlan:
      source: concurrent_state_machine
      params: {state_outcomes: [success, fail], state_io_keys: [arm_commander, selected_grasp]}
      name: simple_concurrent_planning
      outcomes: [fail, success]
      userdata: self.userdata
      default_outcome: fail
      outcome_map: {success: {PlanPregrasp: success, PlanGrasp: success, PlanHold: success}}
      transitions: {success: AllowCollisions, fail: SelectGrasp}
      states:
        - PlanPregrasp:
            source: plan
            target_state_type: pregrasp
            target_state_name: userdata
            plan_name: current_state_to_pregrasp
            io_keys: params.state_io_keys
        - PlanGrasp:
            source: plan
            target_state_type: grasp
            target_state_name: userdata
            plan_name: pregrasp_to_grasp
            starting_state_type: pregrasp
            starting_state_name: userdata
            outcomes: params.state_outcomes
            io_keys: params.state_io_keys
        - PlanHold:
            source: plan
            target_state_type: joint_state
            target_state_name: stability_pose
            plan_name: grasp_to_hold
            starting_state_type: grasp
            starting_state_name: userdata
            outcomes: params.state_outcomes
            io_keys: params.state_io_keys
  - AllowCollisions:
      source: allow_manipulator_collisions
      allow: True
      collision_type: object-collision
      transitions: {success: MovePregrasp, fail: quit_pipeline}
  - MovePregrasp:
      source: move
      params: {outcomes: [success, fail], io_keys: [arm_commander]}
      plan_name: current_state_to_pregrasp
      transitions: {success: ExecutePregrasp, fail: quit_pipeline}
  - ExecutePregrasp:
      source: grasp
      params: {outcomes: [success, fail], io_keys: [selected_grasp, manipulator_controller_client, max_torque], grasp_type: pregrasp}
      transitions: {success: MoveGrasp, fail: quit_pipeline}
  - MoveGrasp:
      source: move
      plan_name: pregrasp_to_grasp
      outcomes: [success, fail]
      io_keys: [arm_commander]
      transitions: {success: ExecuteGrasp, fail: quit_pipeline}
  - ExecuteGrasp:
      source: grasp
      grasp_type: grasp
      outcomes: [success, fail]
      io_keys: [manipulator_controller_client, selected_grasp, max_torque]
      transitions: {success: MoveHold, fail: quit_pipeline}
  - MoveHold:
      source: move
      plan_name: grasp_to_hold
      outcomes: [success, fail]
      io_keys: [arm_commander]
      transitions: {success: successful_pipeline, fail: quit_pipeline}
